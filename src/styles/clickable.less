.interactive {
  transition: var(--std-animation);
  cursor: pointer;
  &.disabled, // FIXME: ditch this class, its redundant with more semantic options
    &:disabled,
    &[aria-disabled="true"] {
    color: inherit;
    cursor: not-allowed;
    pointer-events: none;
    opacity: 0.35;
  }
}

.clickableTextColors {
  color: var(--ironsworn-color-clickable-text);
  &[aria-selected='true'],
  &.selected {
    color: var(--ironsworn-color-clickable-text-selected);
  }
  &:hover,
  &.hover {
    color: var(--ironsworn-color-clickable-text-hover);
  }
}
.clickableBlockColors {
  color: var(--ironsworn-color-clickable-block-fg);
  background-color: var(--ironsworn-color-clickable-block-bg);
  border-color: var(--ironsworn-color-clickable-block-border);
  &:hover,
  &.hover {
    color: var(--ironsworn-color-clickable-block-fg-hover);
    background-color: var(--ironsworn-color-clickable-block-bg-hover);
    border-color: var(--ironsworn-color-clickable-block-border-hover);
  }
  &[aria-selected='true'],
  &.selected {
    color: var(--ironsworn-color-clickable-block-fg-selected);
    background-color: var(
      --ironsworn-color-thematic,
      var(--ironsworn-color-clickable-block-bg-selected)
    );
    border-color: var(--ironsworn-color-clickable-block-border-selected);
  }
}
.prosemirror button,
.tox .tox-tbtn--bespoke {
  .clickableBlockColors();
}

.ironsworn {
  .entity-link,
  .content-link {
    transition: var(--std-animation);
    background-color: var(--ironsworn-color-clickable-block-bg);
    border-color: var(--ironsworn-color-clickable-block-border);
    .clickableBlockColors();
    // forces fg colour so that it is the same colour as the text.
    color: inherit;
    i {
      color: inherit;
    }
    &:hover {
      text-shadow: none;
    }
  }
}

.clickable {
  .interactive();

  &:not(svg):not(.svg) {
    &.text {
      justify-content: flex-start;
      .clickableTextColors();
    }
    &.block {
      .clickableBlockColors();
    }
  }
  svg,
  &.svg {
    &.selected,
    &[aria-selected='true'] {
      fill-opacity: 1;
    }
    &.hover,
    &:hover {
      fill-opacity: 0.35;
    }
    &:active {
      fill-opacity: 0.5;
    }
  }
}
