.interactive {
  transition: var(--std-animation);
  cursor: pointer;
  &.disabled, // FIXME: ditch this class, its redundant with more semantic options
    &:disabled,
    &[aria-disabled="true"] {
    color: inherit;
    cursor: not-allowed;
    pointer-events: none;
    opacity: 0.35;
  }
}

.prosemirror button,
.tox .tox-tbtn--bespoke {
  .clickableBlockMixin();
  border-radius: var(--ironsworn-border-radius-md);
}

.ironsworn {
  .entity-link,
  .content-link {
    .clickableBlockMixin();
    border-radius: var(--ironsworn-border-radius-sm);
    // forces fg colour so that it is the same colour as the text.
    color: inherit;
    i {
      color: inherit;
    }
    &:hover {
      text-shadow: none;
    }
  }
}

.clickable {
  .interactive();
  &:not(svg):not(.svg) {
    &.text:not(.block) {
      .clickableTextMixin();
      &:not(:before) {
        text-align: left;
        justify-content: left;
      }
    }
    &.block {
      .clickableBlockMixin();
    }
  }
  svg,
  &.svg {
    &.selected,
    &[aria-selected='true'] {
      fill-opacity: 1;
    }
    &.hover,
    &:hover {
      fill-opacity: 0.35;
    }
    &:active {
      fill-opacity: 0.5;
    }
  }
}
